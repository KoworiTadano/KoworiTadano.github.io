{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["Header","_ref","siteTitle","React","style","margin","padding","display","alignItems","justifyContent","Link","to","fontSize","textDecoration","Layout","_data$site$siteMetada","children","data","useStaticQuery","site","siteMetadata","title","maxWidth","marginTop","Date","getFullYear","href","Seo","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author","Head","NotFoundPage"],"mappings":"gJA0BeA,MAvBAC,IAAA,IAAC,UAAEC,GAAWD,EAAA,OAC3BE,gBAAA,UACEC,MAAO,CACLC,OAAO,SACPC,QAAQ,oCACRC,QAAQ,OACRC,WAAW,SACXC,eAAe,kBAGjBN,gBAACO,OAAI,CACHC,GAAG,IACHP,MAAO,CACLQ,SAAS,iBACTC,eAAe,Y,UCkCRC,IAtCAb,IAAmB,IAADc,EAAA,IAAjB,SAAEC,GAAUf,EAC1B,MAAMgB,EAAOC,yBAAe,cAU5B,OACEf,2BAAA,KACEA,gBAACH,EAAM,CAACE,WAAiC,QAAtBa,EAAAE,EAAKE,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBM,QAAK,UAChDlB,gBAAA,OACEC,MAAO,CACLC,OAAO,SACPiB,SAAS,sBACThB,QAAQ,uBAGVH,gBAAA,YAAOa,GACPb,gBAAA,UACEC,MAAO,CACLmB,UAAU,iBACVX,SAAS,mBAEZ,iCAEI,IAAIY,MAAOC,cAAc,gBAC5B,IACAtB,gBAAA,KAAGuB,KAAK,4BAA2B,e,kCC5C7C,4BA4CeC,IAlCf,SAAY1B,GAAoC,IAAD2B,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAET,EAAK,SAAEL,GAAUf,EAC3C,MAAM,KAAEkB,GAASD,yBAAe,YAc1Ba,EAAkBD,GAAeX,EAAKC,aAAaU,YACnDE,EAAgC,QAApBJ,EAAGT,EAAKC,oBAAY,IAAAQ,OAAA,EAAjBA,EAAmBP,MAExC,OACElB,2BAAA,KACEA,gBAAA,aAAQ6B,EAAkBX,EAAK,MAAMW,EAAiBX,GACtDlB,gBAAA,QAAM8B,KAAK,cAAcC,QAASH,IAClC5B,gBAAA,QAAMgC,SAAS,WAAWD,QAASb,IACnClB,gBAAA,QAAMgC,SAAS,iBAAiBD,QAASH,IACzC5B,gBAAA,QAAMgC,SAAS,UAAUD,QAAQ,YACjC/B,gBAAA,QAAM8B,KAAK,eAAeC,QAAQ,YAClC/B,gBAAA,QAAM8B,KAAK,kBAAkBC,SAA0B,QAAjBL,EAAAV,EAAKC,oBAAY,IAAAS,OAAA,EAAjBA,EAAmBO,SAAM,KAC/DjC,gBAAA,QAAM8B,KAAK,gBAAgBC,QAASb,IACpClB,gBAAA,QAAM8B,KAAK,sBAAsBC,QAASH,IACzCf,K,kCCvCP,oFAKA,MAQaqB,EAAOA,IAAMlC,gBAACwB,IAAG,CAACN,MAAM,mBAEtBiB,UAVMA,IACnBnC,gBAACW,IAAM,KACLX,gBAAA,UAAI,iBACJA,gBAAA,SAAG,uBACHA,gBAAA,SAAG","file":"component---src-pages-404-js-c7a5b625b0c16f4ef8a1.js","sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      margin: `0 auto`,\n      padding: `var(--space-4) var(--size-gutter)`,\n      display: `flex`,\n      alignItems: `center`,\n      justifyContent: `space-between`,\n    }}\n  >\n    <Link\n      to=\"/\"\n      style={{\n        fontSize: `var(--font-sm)`,\n        textDecoration: `none`,\n      }}\n    >\n      \n    </Link>\n\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer \n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          kowori tadano \"kowori.net\" \n          © {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>404 Not Found</h1>\n    <p>お探しのページは見つかりませんでした。</p>\n    <p>見つかるといいですね。探し物</p>\n  </Layout>\n)\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n"],"sourceRoot":""}